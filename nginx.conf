# /etc/nginx/nginx.conf
# See: https://docs.gunicorn.org/en/latest/deploy.html

user nobody nogroup;
worker_processes 2;

pid /run/nginx.pid;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  # log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  #                 '$status $body_bytes_sent "$http_referer" '
  #                 '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  sendfile on;
  gzip on;

  tcp_nopush on;
  types_hash_max_size 2048;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  upstream app_server {
    # For UNIX domain socket setups
    # `fail_timeout=0` means we always retry an upstream even if it failed
    # to return a good HTTP response
    server unix:/tmp/drp49/gunicorn.sock;

    # For a TCP configuration
    # server 127.0.0.1:8000;
  }

  # Default 80 handler (should be HTTP)
  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name  _;

    client_max_body_size 4G;
    keepalive_timeout 5;

    # location / {
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    #   proxy_set_header Host $http_host;
    #
    #   # We don't want nginx trying to do anything clever with
    #   # redirects, we set the `Host` header above already.
    #   proxy_redirect off;
    #   proxy_pass http://app_server;
    # }

    # Redirect (301) HTTP to HTTPS
    rewrite ^/(.*) https://$host/$1 permanent;
  }

  # Default 443 handler (should be HTTPS)
  server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    server_name _;

    client_max_body_size 4G;
    keepalive_timeout 5;

    # Certificates
    ssl_certificate /etc/letsencrypt/live/drp49.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/drp49.dev/privkey.pem;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      # We don't want nginx trying to do anything clever with
      # redirects, we set the `Host` header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}
