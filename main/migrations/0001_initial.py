# Generated by Django 4.2.1 on 2023-05-31 12:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.SlugField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('staff_only', models.BooleanField(default=False)),
                ('image', models.ImageField(default='main/placeholder.png', upload_to=main.models.Course.course_image_path)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('video', models.FileField(blank=True, upload_to='lecture_videos/')),
                ('lecture_notes', models.TextField(blank=True)),
                ('lecture_notes_js', models.TextField(blank=True)),
                ('lecture_notes_css', models.TextField(blank=True)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('staff_only', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_lectures', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lectures', to='main.course')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField()),
                ('type', models.CharField(choices=[('choice', 'Multiple Choice'), ('fill', 'Fill-in-the-Blanks'), ('qa', 'Q&A')], default='qa', max_length=10)),
                ('source', models.CharField(blank=True, max_length=100)),
                ('knowledge_units', models.ManyToManyField(blank=True, related_name='related_questions', to='main.knowledgeunit')),
                ('lectures', models.ManyToManyField(blank=True, related_name='explained_questions', to='main.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question')),
            ],
            options={
                'verbose_name_plural': 'question notes',
            },
        ),
        migrations.CreateModel(
            name='QuestionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.IntegerField()),
                ('stage', models.CharField(blank=True, max_length=50)),
                ('time', models.DateTimeField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question')),
            ],
        ),
        migrations.CreateModel(
            name='UserLearningData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_notes', models.ManyToManyField(blank=True, related_name='+', through='main.QuestionNotes', to='main.question')),
                ('question_schedules', models.ManyToManyField(blank=True, related_name='+', through='main.QuestionSchedule', to='main.question')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learning_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user learning data',
            },
        ),
        migrations.AddField(
            model_name='questionschedule',
            name='user_learning_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userlearningdata'),
        ),
        migrations.AddField(
            model_name='questionnotes',
            name='user_learning_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.userlearningdata'),
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.SlugField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('questions', models.ManyToManyField(blank=True, related_name='related_problemsets', to='main.question')),
            ],
        ),
        migrations.AddField(
            model_name='knowledgeunit',
            name='lectures',
            field=models.ManyToManyField(blank=True, related_name='knowledge_units', to='main.lecture'),
        ),
        migrations.CreateModel(
            name='KnowledgeMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('users_manage', models.ManyToManyField(blank=True, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('users_read', models.ManyToManyField(blank=True, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('users_write', models.ManyToManyField(blank=True, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentRoot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.comment')),
                ('root', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.commentroot')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='commentroot',
            constraint=models.UniqueConstraint(fields=('content_type', 'object_id'), name='unique_content_object'),
        ),
    ]
